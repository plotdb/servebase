// Generated by LiveScript 1.6.0
(function(){
  var lderror, aux, https, path, nodeFetch;
  lderror = require('lderror');
  aux = require('@servebase/backend/aux');
  https = require('https');
  path = require('path');
  nodeFetch = require('node-fetch');
  module.exports = {
    sign: function(arg$){
      var cfg, payload;
      cfg = arg$.cfg, payload = arg$.payload;
      return Promise.resolve({
        payload: payload
      });
    },
    gateway: {
      pay: function(req, res, next){
        var host, slug, agent, url, cfg;
        host = aux.hostname(req);
        if (!(slug = (req.body || {}).slug)) {
          return lderror.reject(404);
        }
        agent = new https.Agent({
          rejectUnauthorized: false
        });
        url = "https://" + host + "/extapi/pay/gw/dummy/notify";
        cfg = {
          method: 'POST',
          agent: agent,
          headers: {
            "Content-Type": 'application/json; charset=UTF-8'
          },
          body: JSON.stringify({
            slug: slug
          })
        };
        return nodeFetch(url, cfg).then(function(){
          return res.send();
        });
      },
      page: function(req, res, next){
        var ref$, locals, info, fn;
        locals = {
          info: info = {
            slug: (ref$ = req.body || {}).slug,
            name: ref$.name,
            amount: ref$.amount
          }
        };
        if (!(info.name && info.amount)) {
          return lderror.reject(400);
        }
        fn = path.join(path.dirname(__filename), '..', '..', 'view/gateway/dummy/index.pug');
        return res.render(fn, import$({
          exports: locals
        }, locals));
      }
    }
  };
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
